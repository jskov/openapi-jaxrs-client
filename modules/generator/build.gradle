plugins {
    id 'java-library'
}

apply from: "${project.rootDir}/gradle/dk.mada.java.gradle"

dependencies {
    api                 project(':generator-api')
    implementation      (libs.logger)
    implementation      project(':model')
    implementation      project(':parser')

    annotationProcessor (libs.immutablesApt)
    compileOnly         (libs.immutablesAnnotations)

    annotationProcessor (libs.jstachioApt)
    annotationProcessor fileTree(layout.projectDirectory.dir('src/main/resources/templates')) { include '**/*' }
    compileOnly         (libs.jstachioAnnotations)

/*
    // for the generated code
    testImplementation 'javax.json:javax.json-api'
    testImplementation 'javax.json.bind:javax.json.bind-api'

    testImplementation 'javax.validation:validation-api'

    testImplementation 'com.fasterxml.jackson.core:jackson-annotations'
    testImplementation 'com.fasterxml.jackson.core:jackson-core'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'io.quarkus:quarkus-rest-client'
    testImplementation 'io.quarkus:quarkus-resteasy-multipart'
    testImplementation 'jakarta.annotation:jakarta.annotation-api'
    testImplementation 'jakarta.json:jakarta.json-api'
    testImplementation 'jakarta.json.bind:jakarta.json.bind-api'
    testImplementation 'jakarta.validation:jakarta.validation-api'
    testImplementation 'jakarta.ws.rs:jakarta.ws.rs-api'
    testImplementation 'javax.annotation:javax.annotation-api'
    testImplementation 'javax.ws.rs:javax.ws.rs-api'
    testImplementation 'org.eclipse.microprofile.openapi:microprofile-openapi-api'
    testImplementation 'org.eclipse.microprofile.rest.client:microprofile-rest-client-api'
*/
}

test {
    //testLogging.showStandardStreams = true
    
    inputs.files(fileTree(dir: "src/test/java", include: "**/openapi.yaml, **/test.properties"))

    systemProperty("run_all_tests", System.getProperty("run_all_tests", "true"))
}

publishing {
    publications {
        maven(MavenPublication) {
            // Keep legacy name for now
            artifactId = "openapi-jaxrs-client"
            
            from components.java

            pom {
                name = 'OpenAPI JAXRS client generator'
                description = 'Generates api- and dto-classes suitable for use with the MicroProfile client'
            }
        }
    }
}
