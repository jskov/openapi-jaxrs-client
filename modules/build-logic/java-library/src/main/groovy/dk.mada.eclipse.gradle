plugins {
    id('eclipse')
    id('com.diffplug.eclipse.apt')
}

// This task configures enough of the eclipse settings to make
// vscode-java plugin work with APT
task prepCodeGen() {
    doLast {
        mkdir(".settings")
    /*
        String aps = configurations.annotationProcessor.getAsPath()
        println aps

        String valueJarPath = configurations.aptValue.getSingleFile().getAbsolutePath()

        
        File factoryPath = file(".factorypath")
        factoryPath.delete()
        factoryPath << """<factorypath>
  <factorypathentry kind="EXTJAR" id="${valueJarPath}" enabled="true" runInBatchMode="false"/>
"""
        
        configurations.aptStach.getFiles().each { f ->
          String p = f.getAbsolutePath()
          factoryPath << """
  <factorypathentry kind="EXTJAR" id="${p}" enabled="true" runInBatchMode="false"/>
"""
        }

        factoryPath << """
</factorypath>
"""

        File apt = file(".settings/org.eclipse.jdt.apt.core.prefs")
        apt.delete()
        apt << """eclipse.preferences.version=1
org.eclipse.jdt.apt.aptEnabled=true
org.eclipse.jdt.apt.genSrcDir=.apt_generated
org.eclipse.jdt.apt.genTestSrcDir=.apt_generated_tests
org.eclipse.jdt.apt.reconcileEnabled=true
"""

        File jdt = file(".settings/org.eclipse.jdt.core.prefs")
        jdt.delete()
        jdt << """eclipse.preferences.version=1
org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
org.eclipse.jdt.core.compiler.codegen.methodParameters=do not generate
org.eclipse.jdt.core.compiler.codegen.targetPlatform=17
org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
org.eclipse.jdt.core.compiler.compliance=17
org.eclipse.jdt.core.compiler.debug.lineNumber=generate
org.eclipse.jdt.core.compiler.debug.localVariable=generate
org.eclipse.jdt.core.compiler.debug.sourceFile=generate
org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
org.eclipse.jdt.core.compiler.problem.enablePreviewFeatures=disabled
org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
org.eclipse.jdt.core.compiler.problem.reportPreviewFeatures=warning
org.eclipse.jdt.core.compiler.processAnnotations=enabled
org.eclipse.jdt.core.compiler.release=disabled
org.eclipse.jdt.core.compiler.source=17
"""

        File buildship = file(".settings/org.eclipse.buildship.core.prefs")
        buildship.delete()
        buildship << """connection.project.dir=
eclipse.preferences.version=1
"""

        File encoding = file(".settings/org.eclipse.core.resources.prefs")
        encoding.delete()
        encoding << """eclipse.preferences.version=1
encoding/<project>=UTF-8
"""
*/
    }
}

tasks.eclipse {
    doLast {
        mkdir "build/e2e"
    }
}

/*
// When working on templates, eclipse will only run the annotation
// processor, if the @JStache classes are changed.
// So run './gradlew -t processResources' and this hack will deliver.
processResources {
    doLast {
        def time = System.currentTimeMillis()
        file("src/main/java/dk/mada/jaxrs/generator/api/tmpl/CtxApi.java").setLastModified(time)
        file("src/main/java/dk/mada/jaxrs/generator/dto/tmpl/CtxDto.java").setLastModified(time)
    }
}
*/