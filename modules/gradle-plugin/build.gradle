plugins {
    id 'jacoco'
    id 'jacoco-report-aggregation'
    id 'java-gradle-plugin'
    id 'maven-publish'
    id 'com.gradle.plugin-publish' version '1.1.0'
    id 'eclipse'
    id 'test-report-aggregation'
}
group "${groupId}"

repositories {
    mavenCentral()
}


dependencies {
    testImplementation  platform("org.junit:junit-bom:$junitVersion")
    testImplementation  'org.junit.jupiter:junit-jupiter'
    testImplementation  "org.assertj:assertj-core:$assertJVersion"
}


pluginBundle {
    website = 'https://github.com/jskov/openapi-jaxrs-client'
    vcsUrl = 'https://github.com/jskov/openapi-jaxrs-client'
    tags = ['openapi', 'swagger', 'codegen', 'generator', 'jax-rs', 'microprofile']
}

gradlePlugin {
    plugins {
        openApiJaxrs {
            id = 'dk.mada.jaxrs'
            displayName = 'Plugin for generating JAX-RS code from OpenAPI documents'
            description = 'A plugin that generates JAX-RS code from OpenApi documents. It has many configuration options and a broad test suite to cover many corner cases.'
            implementationClass = 'dk.mada.jaxrs.gradle.JaxrsPlugin'
        }
    }
}

test {
    useJUnitPlatform()
    
    testLogging.showStandardStreams = true
    
    forkEvery = 1
}

jacocoTestReport {
    reports {
        xml.required.set(true)
    }
    dependsOn test // tests are required to run before generating the report
}

apply from: "$project.rootDir/sonar.gradle"

sonarqube {
    properties {
        property "sonar.inclusions", "**/src/main/**"
        property "sonar.sourceEncoding", "UTF-8"
//        property "sonar.java.checkstyle.reportPaths", "build/reports/checkstyle/main.xml"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/*.xml"
    }
}
