/**
 * {{#description}}{{description}}{{/description}}{{^description}}{{classname}}{{/description}}
 */
{{#jackson}}
@JsonPropertyOrder({
{{#madaDto.varsOpenapiOrder}}
  {{classname}}.JSON_PROPERTY_{{nameInSnakeCase}}{{^-last}},{{/-last}}
{{/madaDto.varsOpenapiOrder}}
})
{{#madaDto.jacksonJsonSerializeOptions}}
@JsonSerialize({{{madaDto.jacksonJsonSerializeOptions}}})
{{/madaDto.jacksonJsonSerializeOptions}}
{{/jackson}}
{{#madaDto.jsonb}}
@JsonbPropertyOrder({
{{#madaDto.varsOpenapiOrder}}
  {{classname}}.JSON_PROPERTY_{{nameInSnakeCase}}{{^-last}},{{/-last}}
{{/madaDto.varsOpenapiOrder}}
})
{{/madaDto.jsonb}}
{{#madaDto.quarkusRegisterForReflection}}
@RegisterForReflection
{{/madaDto.quarkusRegisterForReflection}}
{{#discriminator}}
{{>typeInfoAnnotation}}
{{/discriminator}}
{{#madaDto.schemaOptions}}
@Schema({{{madaDto.schemaOptions}}})
{{/madaDto.schemaOptions}}
{{>generatedAnnotation}}
public {{madaDto.classModifiers}}class {{classname}}{{#parent}} extends {{{.}}}{{/parent}}{{#madaDto.implementsInterfaces}} implements {{madaDto.implementsInterfaces}}{{/madaDto.implementsInterfaces}} {
  {{#vars}}
    {{#isEnum}}
{{>enumClass}}
    {{/isEnum}}
  {{#jackson}}
  public static final String JSON_PROPERTY_{{nameInSnakeCase}} = "{{baseName}}";
  @JsonProperty(JSON_PROPERTY_{{nameInSnakeCase}})
  {{#isDate}}
    {{#madaDto.customLocalDateDeserializer}}
  @JsonDeserialize(using = {{madaDto.customLocalDateDeserializer}}.class)
    {{/madaDto.customLocalDateDeserializer}}
    {{#madaDto.customLocalDateSerializer}}
  @JsonSerialize(using = {{madaDto.customLocalDateSerializer}}.class{{#madaDto.jacksonJsonSerializeOptions}}, {{{madaDto.jacksonJsonSerializeOptions}}}{{/madaDto.jacksonJsonSerializeOptions}})
    {{/madaDto.customLocalDateSerializer}}
  {{/isDate}}
  {{#isDateTime}}
    {{#madaDto.customOffsetDateTimeDeserializer}}
  @JsonDeserialize(using = {{madaDto.customOffsetDateTimeDeserializer}}.class)
    {{/madaDto.customOffsetDateTimeDeserializer}}
    {{#madaDto.customOffsetDateTimeSerializer}}
  @JsonSerialize(using = {{madaDto.customOffsetDateTimeSerializer}}.class{{#madaDto.jacksonJsonSerializeOptions}}, {{{madaDto.jacksonJsonSerializeOptions}}}{{/madaDto.jacksonJsonSerializeOptions}})
    {{/madaDto.customOffsetDateTimeSerializer}}
  {{/isDateTime}}
  {{/jackson}}
  {{#madaDto.jsonb}}
  public static final String JSON_PROPERTY_{{nameInSnakeCase}} = "{{baseName}}";
  @JsonbProperty(JSON_PROPERTY_{{nameInSnakeCase}})
    {{#isEnum}}
    {{^isContainer}}
  @JsonbTypeAdapter({{packageName}}.{{classname}}.{{datatypeWithEnum}}.{{datatypeWithEnum}}Adapter.class)
    {{/isContainer}}
    {{/isEnum}}
  {{/madaDto.jsonb}}
  {{#madaProp.schemaOptions}}
  @Schema({{{madaProp.schemaOptions}}})
  {{/madaProp.schemaOptions}}
  {{#isContainer}}
  private {{{datatypeWithEnum}}} {{name}}{{#required}}{{#defaultValue}} = {{{.}}}{{/defaultValue}}{{/required}};
  {{/isContainer}}
  {{^isContainer}}
  private {{{datatypeWithEnum}}} {{name}}{{#defaultValue}} = {{{.}}}{{/defaultValue}};
  {{/isContainer}}

  {{/vars}}
  {{#vars}}
  public {{classname}} {{name}}({{{datatypeWithEnum}}} {{name}}) {
    {{#required}}
    this.{{name}} = Objects.requireNonNull({{name}}, "Property {{name}} is required, cannot be null");
    {{/required}}
    {{^required}}
    this.{{name}} = {{name}};
    {{/required}}
    return this;
  }
  {{#madaProp.isUseBigDecimalForDouble}}

  public {{classname}} {{name}}(BigDecimal {{name}}) {
    {{#required}}
    this.{{name}} = Objects.requireNonNull({{name}}, "Property {{name}} is required, cannot be null").doubleValue();
    {{/required}}
    {{^required}}
    this.{{name}} = {{name}} == null ? null : {{name}}.doubleValue();
    {{/required}}
    return this;
  }
  {{/madaProp.isUseBigDecimalForDouble}}
  {{#isArray}}

  public {{classname}} add{{nameInCamelCase}}Item({{{madaProp.innerDatatypeWithEnum}}} {{name}}Item) {
    {{^required}}
    if (this.{{name}} == null) {
      this.{{name}} = {{{defaultValue}}};
    }
    {{/required}}
    this.{{name}}.add({{name}}Item);
    return this;
  }
  {{/isArray}}
  {{#isMap}}

  public {{classname}} put{{nameInCamelCase}}Item(String key, {{{madaProp.innerDatatypeWithEnum}}} {{name}}Item) {
    {{^required}}
    if (this.{{name}} == null) {
      this.{{name}} = {{{defaultValue}}};
    }
    {{/required}}
    this.{{name}}.put(key, {{name}}Item);
    return this;
  }
  {{/isMap}}

  /**
  {{#description}}
   * {{.}}
  {{/description}}
  {{^description}}
   * Get {{name}}
  {{/description}}
  {{#minimum}}
   * minimum: {{.}}
  {{/minimum}}
  {{#decimalMinimum}}
   * minimum: {{{.}}}
  {{/decimalMinimum}}
  {{#maximum}}
   * maximum: {{.}}
  {{/maximum}}
  {{#decimalMaximum}}
   * maximum: {{{.}}}
  {{/decimalMaximum}}
{{#madaProp.renderJavadocMacroSpacer}}
   *
{{/madaProp.renderJavadocMacroSpacer}}
   * @return {{name}}
   **/
 {{#vendorExtensions.x-extra-annotation}}
  {{{vendorExtensions.x-extra-annotation}}}
  {{/vendorExtensions.x-extra-annotation}}
  {{#useBeanValidation}}{{>beanValidationProp}}{{/useBeanValidation}} 
  {{#madaProp.isUseEmptyCollections}}
   {{#jackson}}
  @JsonIgnore
   {{/jackson}}
  {{/madaProp.isUseEmptyCollections}}
  public {{{datatypeWithEnum}}} {{getter}}() {
    return {{name}};
  }
  {{#madaProp.isUseBigDecimalForDouble}}

  {{#jackson}}
  @JsonIgnore
  {{/jackson}}
  public BigDecimal {{madaProp.getter}}() {
    return {{name}} == null ? null : new BigDecimal({{name}});
  }
  {{/madaProp.isUseBigDecimalForDouble}}
  {{#madaProp.isUseEmptyCollections}}

  {{#useBeanValidation}}{{>beanValidationProp}}{{/useBeanValidation}} 
  public {{{datatypeWithEnum}}} {{madaProp.getter}}() {
    if (this.{{name}} == null) {
      this.{{name}} = {{{defaultValue}}};
    }
    return this.{{name}};
  }
  {{/madaProp.isUseEmptyCollections}}

  {{#vendorExtensions.x-setter-extra-annotation}}
  {{{vendorExtensions.x-setter-extra-annotation}}}
  {{/vendorExtensions.x-setter-extra-annotation}}
  public void {{setter}}({{{datatypeWithEnum}}} {{name}}) {
    {{#required}}
    this.{{name}} = Objects.requireNonNull({{name}}, "Property {{name}} is required, cannot be null");
    {{/required}}
    {{^required}}
    this.{{name}} = {{name}};
    {{/required}}
  }
  {{#madaProp.isUseBigDecimalForDouble}}

  {{#jackson}}
  @JsonIgnore
  {{/jackson}}
  public void {{madaProp.setter}}(BigDecimal {{name}}) {
    {{#required}}
    this.{{name}} = Objects.requireNonNull({{name}}, "Property {{name}} is required, cannot be null").doubleValue();
    {{/required}}
    {{^required}}
    this.{{name}} = {{name}} == null ? null : {{name}}.doubleValue();
    {{/required}}
  }
  {{/madaProp.isUseBigDecimalForDouble}}

  {{/vars}}
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (!(o instanceof {{classname}})) {
      return false;
    }{{#hasVars}}
    {{classname}} {{classVarName}} = ({{classname}}) o;
    return {{#vars}}{{^madaProp.isByteArray}}Objects{{/madaProp.isByteArray}}{{#madaProp.isByteArray}}Arrays{{/madaProp.isByteArray}}.equals(this.{{name}}, {{classVarName}}.{{name}}){{^-last}} &&
        {{/-last}}{{/vars}}{{#parent}} &&
        super.equals(o){{/parent}};{{/hasVars}}{{^hasVars}}
    return true;{{/hasVars}}
  }

  @Override
  public int hashCode() {
    return Objects.hash({{#vars}}{{^madaProp.isByteArray}}{{name}}{{/madaProp.isByteArray}}{{#madaProp.isByteArray}}Arrays.hashCode({{name}}){{/madaProp.isByteArray}}{{^-last}}, {{/-last}}{{/vars}}{{#parent}}{{#hasVars}}, {{/hasVars}}super.hashCode(){{/parent}});
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class {{classname}} {");
    {{#parent}}
    sb.append("\n    ").append(toIndentedString(super.toString()));
    {{/parent}}
    {{#vars}}
    sb.append("\n    {{name}}: ").append(toIndentedString({{name}}));
    {{/vars}}
    sb.append("\n}");
    return sb.toString();
  }

  private String toIndentedString(Object o) {
    return Objects.toString(o).replace("\n", "\n    ");
  }
}
